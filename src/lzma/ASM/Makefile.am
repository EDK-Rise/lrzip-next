MAINTAINERCLEANFILES = Makefile.in

SRC = @srcdir@/x86
ABSSRC = @abs_srcdir@/x86
ASM_7z = 7zCrcOpt
ASM_H  = $(SRC)/7zAsm.asm
ASM_S  = $(SRC)/$(ASM_7z).asm
ASM_OPT += -g -F dwarf -I $(SRC)/
## For LZMA Assembler Decompressor
if USE_X64
  ASM_De = LzmaDecOpt
  ASM_F  = LzFindOpt
  ASM_S  += $(SRC)/$(ASM_De).asm $(SRC)/$(ASM_F).asm
endif

noinst_LTLIBRARIES = liblzmaASM.la
liblzmaASM_la_SOURCES = $(ASM_S) $(ASM_H)

## hack to force asm compilation and to trick libtool with .lo file
liblzmaASM_la_LIBADD = $(ASM_7z).lo

7ZIPASMLOFILE := \
\# $(ASM_7z).lo - a libtool object file\
\n\# Generated by libtool -- hack to allow asm linking\
\n\# Peter Hyman\
\npic_object='.libs/$(ASM_7z).o'\
\nnon_pic_object='$(ASM_7z).o'

## Need absolute location for ASM source for later debugging if required
$(ASM_7z).lo: $(SRC)/$(ASM_7z).asm
	$(ASM_PROG) $(ASM_OPT) -o $(ASM_7z).o $(ABSSRC)/$(ASM_7z).asm
	@echo -e "$(7ZIPASMLOFILE)" > $(ASM_7z).lo
	@mkdir -p .libs
	@cp $(ASM_7z).o .libs

## lzmadecompress and lzfind
if USE_X64
liblzmaASM_la_LIBADD += $(ASM_De).lo $(ASM_F).lo

LzmaDecOptFILE := \
\# $(ASM_De).lo - a libtool object file\
\n\# Generated by libtool -- hack to allow asm linking\
\n\# Peter Hyman\
\npic_object='.libs/$(ASM_De).o'\
\nnon_pic_object='$(ASM_De).o'

$(ASM_De).lo: $(SRC)/$(ASM_De).asm
	$(ASM_PROG) $(ASM_OPT) -o $(ASM_De).o $(ABSSRC)/$(ASM_De).asm
	@echo -e "$(LzmaDecOptFILE)" > $(ASM_De).lo
	@cp $(ASM_De).o .libs

LzFindOptFILE := \
\# $(ASM_F).lo - a libtool object file\
\n\# Generated by libtool -- hack to allow asm linking\
\n\# Peter Hyman\
\npic_object='.libs/$(ASM_F).o'\
\nnon_pic_object='$(ASM_F).o'

$(ASM_F).lo: $(SRC)/$(ASM_F).asm
	$(ASM_PROG) $(ASM_OPT) -o $(ASM_F).o $(ABSSRC)/$(ASM_F).asm
	@echo -e "$(LzFindOptFILE)" > $(ASM_F).lo
	@cp $(ASM_F).o .libs
endif
